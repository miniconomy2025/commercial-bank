services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: commercial-bank
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "54320:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  flyway:
    image: flyway/flyway:9
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ../flyway:/flyway/sql
    command: -url=jdbc:postgresql://postgres:5432/commercial-bank -user=postgres -password=postgres -locations=filesystem:/flyway/sql migrate
    environment:
      - FLYWAY_BASELINE_ON_MIGRATE=true

  backend:
    build:
      context: ../server
      dockerfile: ../test-env/Dockerfile.backend
    depends_on:
      flyway:
        condition: service_completed_successfully
    environment:
      NODE_ENV: test
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: commercial-bank
      DB_USER: postgres
      DB_PASSWORD: postgres
      PORT: 3000
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/commercial-bank
      CLIENT_ID: test-client-id
      TIMEOUT: 60000
      THOH_HOST: https://localhost:8443
    ports:
      - "3000:3000"
    command: ["sh", "-c", "NODE_ENV=test node dist/server.js"]
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  frontend:
    build:
      context: ../frontend
      dockerfile: ../test-env/Dockerfile.frontend
    depends_on:
      - backend
    environment:
      VITE_API_URL: http://backend:3000
    ports:
      - "5173:5173"

  test-runner:
    build:
      context: .
      dockerfile: Dockerfile.test-runner
    depends_on:
      - backend
        # condition: service_healthy
      - frontend
        # condition: service_started
    volumes:
      - ../server:/server
      - ../frontend:/frontend
    environment:
      BACKEND_URL: http://backend:3000
      FRONTEND_URL: http://frontend:5173
      TERM: xterm-256color
      FORCE_COLOR: 1

volumes:
  postgres_data: