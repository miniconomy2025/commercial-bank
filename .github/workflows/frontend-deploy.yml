name: Deploy Frontend

on:
  workflow_dispatch: {}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install frontend dependencies and build
        run: |
          cd frontend
          npm ci
          npm run build

      - name: Copy frontend build to EC2
        uses: appleboy/scp-action@v1
        with:
          host: ${{ vars.FRONTEND_EC2_HOST }}
          username: ${{ vars.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          source: "frontend/dist/"
          target: "/home/${{ vars.EC2_USER }}/frontend-build/"
          rm: true
      
      - name: create certs directory
        run: mkdir -p ./certs

      - name: Write server.key from secret
        run: |
          echo "${{ secrets.SERVER_PKEY }}" > ./certs/client.key
          chmod 600 ./certs/client.key

      - name: Copy server.crt file from folder
        run: |
          cp ./server/server.crt ./certs/client.crt
          cp ./server/ca.crt ./certs/ca.crt

      - name: Copy certificates to EC2
        uses: appleboy/scp-action@v1
        with:
          host: ${{ vars.FRONTEND_EC2_HOST }}
          username: ${{ vars.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          source: "certs/*"
          target: "~/certs/"
          rm: true

      - name: Deploy and configure Nginx + Certbot
        uses: appleboy/ssh-action@master
        with:
          host: ${{ vars.FRONTEND_EC2_HOST }}
          username: ${{ vars.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            set -e

            WEB_DOMAIN="${{ vars.WEB_DOMAIN }}"
            CERTBOT_EMAIL="${{ secrets.CERTBOT_EMAIL }}"

            echo "--- Deploying frontend files ---"
            sudo mkdir -p /var/www/frontend
            sudo rm -rf /var/www/frontend/*
            sudo cp -r /home/${{ vars.EC2_USER }}/frontend-build/* /var/www/frontend/
            sudo chown -R nginx:nginx /var/www/frontend || true

            echo "--- Installing and Configuring Nginx ---"
            if ! command -v nginx &> /dev/null; then
              sudo yum install -y nginx || sudo apt install -y nginx
              sudo systemctl enable nginx
            fi

            NGINX_CONF="/etc/nginx/conf.d/frontend.conf"
            echo "Creating Nginx config file at $NGINX_CONF"

            sudo tee "$NGINX_CONF" > /dev/null <<EOF
            server {
                listen 80;
                server_name $WEB_DOMAIN;

                root /var/www/frontend/frontend/dist;
                index index.html;

                location / {
                    try_files \$uri /index.html;
                }

                location /api/ {
                    proxy_pass https://commercial-bank-api.projects.bbdgrad.com;

                    proxy_ssl_certificate /etc/nginx/certs/client.crt;
                    proxy_ssl_certificate_key /etc/nginx/certs/client.key;

                    proxy_ssl_verify on;
                    proxy_ssl_trusted_certificate /etc/nginx/certs/remote_server_ca.crt;
                    proxy_ssl_verify_depth 2;

                    proxy_set_header Host \$host;
                    proxy_set_header X-Real-IP \$remote_addr;
                    proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
                    proxy_set_header X-Forwarded-Proto \$scheme;

                    proxy_redirect off;
                }

            }
            EOF

            echo "Testing and restarting Nginx..."
            sudo nginx -t && sudo systemctl restart nginx

            echo "--- Installing Certbot and requesting SSL certificate ---"
            if ! command -v certbot &> /dev/null; then
              sudo yum install -y epel-release || true
              sudo yum install -y certbot python3-certbot-nginx || sudo apt install -y certbot python3-certbot-nginx
            fi

            sudo certbot --nginx --non-interactive --agree-tos --email "$CERTBOT_EMAIL" -d "$WEB_DOMAIN"

            echo "Reloading Nginx with SSL..."
            sudo nginx -t && sudo systemctl reload nginx

            echo "Frontend deployed with HTTPS at https://$WEB_DOMAIN"
